{"version":3,"sources":["shared/config.tsx","components/StoryParallax/index.js","components/Navbar/index.tsx","components/CardLayout/index.tsx","components/Cards/Card.tsx","components/Cards/ArtCard.tsx","pages/Story/ArtPage/index.tsx","pages/Story/ProjectsPage/index.tsx","components/Cards/PhotoCard.tsx","pages/Story/PhotographyPage/index.tsx","pages/Story/index.tsx","pages/Landing/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Emoji","props","className","role","aria-label","label","aria-hidden","symbol","mediaQueries","colors","fonts","heading","body","StoryParallax","state","window","addEventListener","e","layers","Array","from","document","querySelectorAll","topDistance","pageYOffset","forEach","layer","speed","getAttribute","movement","style","transform","ref","c","container","id","data-speed","css","React","Component","scroller","scrollTo","smooth","NavItem","itemStyle","itemHoverStyle","to","children","ChooseScroll","scroll","activeClass","spy","duration","ignoreCancelEvents","Blank","styled","Navbar","url","useRouteMatch","DesktopView","MobileView","CardLayout","sheetsData","sheetId","this","Tabletop","init","key","callback","googleData","setState","simpleSheet","columns","breakpointCols","columnClassName","map","row","createElement","cardComponent","value","Card","Image","ImageHolder","ArtCard","showModal","setModalVisibility","bind","caption","imageURL","imageAlt","src","alt","ArtPage","PhotoCard","ProjectsPage","PhotographyPage","StoryPage","path","position","backgroundColor","color","fontWeight","name","transition","exact","settings","LinkColor","MainPage","TextHolder","LinkStyle","Giraffe","P","Header","LandingPage","options","reverse","scale","max","perspective","reset","height","width","href","target","App","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ca8ea47.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Emoji = (props: any) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n);\n\nexport const mediaQueries = {\n  tablet: \"@media (max-width: 1000px)\",\n  mobile: \"@media (max-width: 700px)\",\n  notMobile: \"@media (min-width: 701px)\"\n};\nexport const colors = {\n  teal: \"#008080\",\n  black: \"black\",\n  white: \"white\"\n};\n\nexport const fonts = {\n  comic: {\n    heading: \"Quicksand\",\n    body: \"Nunito\"\n  },\n  booky: {\n    heading: \"Alegreya\",\n    body: \"Alegreya\"\n  }\n};\n","import React from \"react\";\nimport \"./Parallax.scss\";\nimport { css } from \"emotion\";\nimport { fonts, mediaQueries, colors } from \"../../shared/config\";\n\nexport default class StoryParallax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", function(e) {\n      const layers = Array.from(document.querySelectorAll(\".parallax-layer\"));\n      let topDistance = window.pageYOffset;\n\n      layers.forEach(layer => {\n        let speed = layer.getAttribute(\"data-speed\");\n        let movement = -((topDistance * speed) / 100);\n        layer.style.transform = `translateY(${movement}px)`;\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Parallax\" ref={c => (this.container = c)}>\n        <div className=\"parallax-layer\" id=\"layer-0\" data-speed=\"40\">\n          <div\n            className={css`\n              font-family: ${fonts.booky.heading};\n              font-size: 72px;\n              text-align: center;\n              margin: 80px;\n              ${mediaQueries.mobile} {\n                font-size: 60px;\n                margin: 80px 40px;\n              }\n            `}\n          >\n            The Story of Max Wu\n          </div>\n        </div>\n        {/* <div className=\"parallax-layer\" id=\"layer-2\" data-speed=\"85\"></div> */}\n        <div className=\"parallax-layer\" id=\"layer-1\" data-speed=\"100\"></div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\n\nimport { colors, fonts } from \"../../shared/config\";\n\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { Link as ScrollLink, scroller } from \"react-scroll\";\n\nscroller.scrollTo(\"bottomNavbar\", {\n  smooth: \"easeInQuart\"\n});\n\ninterface NavItemProps {\n  itemStyle?: any;\n  itemHoverStyle?: any;\n  to: string;\n}\n\nconst NavItem: React.FC<NavItemProps> = props => {\n  const { itemStyle, itemHoverStyle, to } = props;\n\n  return (\n    <Link\n      to={to}\n      className={css`\n        display: flex;\n        text-decoration: none;\n        align-items: center;\n        padding: 20px 25px;\n        text-decoration: none;\n        ${itemStyle && {\n          ...itemStyle\n        }}\n        &:hover {\n          font-weight: 700;\n          ${itemHoverStyle && { ...itemHoverStyle }};\n        }\n      `}\n    >\n      {props.children}\n    </Link>\n  );\n};\n\ninterface ChooseScrollProps {\n  itemStyle?: any;\n  itemHoverStyle?: any;\n  to: string;\n  scroll?: boolean;\n}\nconst ChooseScroll: React.FC<ChooseScrollProps> = props => {\n  const { itemStyle, itemHoverStyle, to, scroll } = props;\n  return scroll ? (\n    <ScrollLink\n      activeClass=\"active\"\n      to=\"bottomNavbar\"\n      spy={true}\n      smooth={true}\n      duration={2000}\n      ignoreCancelEvents\n    >\n      <NavItem\n        itemStyle={itemStyle}\n        itemHoverStyle={itemHoverStyle}\n        to={to}\n        children={props.children}\n      />\n    </ScrollLink>\n  ) : (\n    <NavItem\n      itemStyle={itemStyle}\n      itemHoverStyle={itemHoverStyle}\n      to={to}\n      children={props.children}\n    />\n  );\n};\n\nconst Blank = styled(\"div\")`\n  width: 10px;\n`;\n\ninterface NavbarProps {\n  style?: any;\n  itemStyle?: any;\n  itemHoverStyle?: any;\n  scroll?: boolean;\n}\n\nexport const Navbar: React.FC<NavbarProps> = props => {\n  const { url } = useRouteMatch();\n  const { itemStyle, itemHoverStyle, scroll, style } = props;\n\n  return (\n    <>\n      <nav\n        className={css`\n          position: -webkit-sticky;\n          width: 100%;\n          position: sticky;\n          top: 0;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          font-family: ${fonts.comic.heading};\n          pointer-events: auto;\n          z-index: 100;\n          overflow: scroll;\n          ${style && { ...style }}\n        `}\n      >\n        <Blank />\n\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`/`}\n          scroll={scroll}\n        >\n          go back\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}`}\n          scroll={scroll}\n        >\n          home\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/projects`}\n          scroll={scroll}\n        >\n          projects\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/art`}\n          scroll={scroll}\n        >\n          art\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/photography`}\n          scroll={scroll}\n        >\n          photography\n        </ChooseScroll>\n      </nav>\n    </>\n  );\n};\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport { mediaQueries } from \"../../shared/config\";\nimport \"./styles.css\";\n\nimport Tabletop from \"tabletop\";\n\nimport styled from \"@emotion/styled\";\n\nconst DesktopView = styled(\"div\")`\n  ${mediaQueries.mobile} {\n    display: none;\n  }\n`;\n\nconst MobileView = styled(\"div\")`\n  ${mediaQueries.notMobile} {\n    display: none;\n  }\n`;\n\ninterface CardLayoutState {\n  sheetsData: any;\n}\n\ninterface CardLayoutProps {\n  columns: number;\n  sheetId: string;\n  cardComponent: React.ComponentClass<{ value: any }>;\n}\n\nexport class CardLayout extends React.Component<\n  CardLayoutProps,\n  CardLayoutState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sheetsData: []\n    };\n  }\n  componentDidMount() {\n    const { sheetId } = this.props;\n    Tabletop.init({\n      key: sheetId,\n      callback: (googleData: any) => {\n        this.setState({\n          sheetsData: googleData\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  render() {\n    const { columns } = this.props;\n    return (\n      <div>\n        <MobileView>\n          <Masonry\n            breakpointCols={1}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {this.state.sheetsData &&\n              this.state.sheetsData.map((row: any) =>\n                React.createElement(this.props.cardComponent, {\n                  value: row\n                })\n              )}\n          </Masonry>\n        </MobileView>\n        <DesktopView>\n          <Masonry\n            breakpointCols={columns}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {this.state.sheetsData &&\n              this.state.sheetsData.map((row: any) =>\n                React.createElement(this.props.cardComponent, {\n                  value: row\n                })\n              )}\n          </Masonry>\n        </DesktopView>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { css } from \"emotion\";\n\n// const imagesLoadedOptions = { background: \".my-bg-image-el\" };\n\nimport { colors, fonts } from \"../../shared/config\";\n\nclass Card extends React.Component {\n  render() {\n    return (\n      <div\n        className={css`\n          height: auto;\n          width: 100%;\n          box-shadow: 5px 5px 5px black;\n        `}\n      >\n        <div\n          className={css`\n            /* margin: 5px; */\n            padding: 20px;\n            background-color: ${colors.white};\n            font-style: ${fonts.booky.body};\n          `}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","// Copy paste this template to create a new component\n// that can be put into the masonry layout!\n\nimport * as React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport Card from \"./Card\";\n\nimport { colors, fonts } from \"../../shared/config\";\n\nconst Image = styled(\"img\")`\n  width: 100%;\n  height: auto;\n`;\n\nconst ImageHolder = styled(\"div\")`\n  width: 100%;\n  height: auto;\n  position: relative;\n`;\n\n//\n\nconst Link = styled(\"div\")`\n  color: ${colors.teal};\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\ninterface ArtCardProps {\n  value: {\n    caption: string;\n    imageURL: string;\n    imageAlt: string;\n  };\n}\n\nclass ArtCard extends React.Component<ArtCardProps, {}> {\n  constructor(props: ArtCardProps) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n    this.setModalVisibility = this.setModalVisibility.bind(this);\n  }\n\n  setModalVisibility(state: boolean) {\n    this.setState({ showModal: state });\n  }\n\n  render() {\n    const { caption, imageURL, imageAlt } = this.props.value;\n\n    return (\n      <Card>\n        <div\n          className={css`\n            height: 100%;\n            width: 100%;\n          `}\n        >\n          <ImageHolder>\n            <Image src={imageURL} alt={imageAlt} />\n          </ImageHolder>\n          <div\n            className={css`\n              font-size: 20px;\n              margin: 10px;\n              color: ${colors.black};\n              text-align: center;\n            `}\n          >\n            {caption}\n          </div>\n          {/* <div\n            className={css`\n              text-align: center;\n            `}\n          >\n            <Link onClick={() => this.setModalVisibility(true)}>Read more</Link>\n          </div> */}\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ArtCard;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nimport { CardLayout } from \"../../../components/CardLayout\";\nimport PhotoCard from \"../../../components/Cards/ArtCard\";\n\nexport const ArtPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        width: 90%;\n        margin: 0 auto;\n      `}\n    >\n      <CardLayout\n        sheetId=\"1EwIwb7Vf8hwD80Bj4fW9OlBi-TjNZ7XXRVHx_Ow7lQo\"\n        columns={3}\n        cardComponent={PhotoCard}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { css } from \"emotion\";\n\nexport const ProjectsPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        text-align: center;\n        line-height: 400px;\n      `}\n    >\n      coming soon\n    </div>\n  );\n};\n","// Copy paste this template to create a new component\n// that can be put into the masonry layout!\n\nimport * as React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport Card from \"./Card\";\n\nimport { colors, fonts } from \"../../shared/config\";\n\nconst Image = styled(\"img\")`\n  width: 100%;\n  height: auto;\n`;\n\nconst ImageHolder = styled(\"div\")`\n  width: 100%;\n  height: auto;\n  position: relative;\n`;\n\nconst Link = styled(\"div\")`\n  color: ${colors.teal};\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\ninterface PhotoCardProps {\n  value: {\n    imageURL: string;\n    imageAlt: string;\n  };\n}\n\nclass PhotoCard extends React.Component<PhotoCardProps, {}> {\n  constructor(props: PhotoCardProps) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n    this.setModalVisibility = this.setModalVisibility.bind(this);\n  }\n\n  setModalVisibility(state: boolean) {\n    this.setState({ showModal: state });\n  }\n\n  render() {\n    const { imageURL, imageAlt } = this.props.value;\n\n    return (\n      <Card>\n        <div\n          className={css`\n            height: 100%;\n            width: 100%;\n          `}\n        >\n          <ImageHolder>\n            <Image src={imageURL} alt={imageAlt} />\n          </ImageHolder>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default PhotoCard;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nimport { CardLayout } from \"../../../components/CardLayout\";\nimport PhotoCard from \"../../../components/Cards/PhotoCard\";\n\nexport const PhotographyPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        width: 90%;\n        margin: 0 auto;\n      `}\n    >\n      <CardLayout\n        sheetId=\"1Ku9E9p1u52nVzTF71DNqSOCuecB2UK8Odyi8paDw9PI\"\n        columns={4}\n        cardComponent={PhotoCard}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport Parallax from \"../../components/StoryParallax\";\nimport { Navbar } from \"../../components/Navbar\";\n\nimport { ArtPage } from \"./ArtPage\";\nimport { ProjectsPage } from \"./ProjectsPage\";\nimport { PhotographyPage } from \"./PhotographyPage\";\n\nimport { css } from \"emotion\";\nimport { colors } from \"../../shared/config\";\n\nimport { Element } from \"react-scroll\";\n\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nexport const StoryPage: React.FC = () => {\n  const { path } = useRouteMatch();\n  // const bottomColor = \"#010220\";\n  const bottomColor = \"#003366\";\n  return (\n    <div>\n      <Navbar\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"transparent\"\n        }}\n        itemStyle={{ color: colors.black, fontWeight: \"bold\" }}\n        itemHoverStyle={{\n          color: colors.white\n        }}\n        scroll\n      />\n      <Parallax />\n      <Element name=\"bottomNavbar\" />\n      <Navbar\n        style={{ backgroundColor: \"rgba(1, 2, 32, 0.7)\" }}\n        itemStyle={{ color: colors.white }}\n        itemHoverStyle={{\n          fontWeight: \"bold\",\n          backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n          transition: \"0.3s\"\n        }}\n      />\n\n      <div\n        className={css`\n          height: 15vh;\n          width: 100%;\n          background-image: linear-gradient(#010220, ${bottomColor});\n          color: white;\n          margin-top: -50px;\n          border-top: 50px solid #010220;\n          /* outline: 300px solid #010220; */\n          /* z-index: -200 !important; */\n        `}\n      ></div>\n\n      <div\n        className={css`\n          min-height: 100vh;\n          width: 100%;\n          background-color: ${bottomColor};\n          z-index: 10;\n          color: white;\n        `}\n      >\n        <Switch>\n          <Route exact path={path}>\n            <div\n              className={css`\n                text-align: center;\n                line-height: 400px;\n              `}\n            >\n              Thanks so much for stopping by! ^_^ This is still a WIP but stay\n              tuned for more content heh. (hint: click 'art' or 'photography')\n            </div>\n          </Route>\n          <Route path={`${path}/projects`}>\n            <ProjectsPage />\n          </Route>\n          <Route path={`${path}/art`}>\n            <ArtPage />\n          </Route>\n          <Route path={`${path}/photography`}>\n            <PhotographyPage />\n          </Route>\n        </Switch>\n      </div>\n\n      <div\n        className={css`\n          height: 100px;\n          width: 100%;\n          background-image: linear-gradient(${bottomColor}, #010220);\n          z-index: 10;\n          color: white;\n\n          line-height: 100px;\n          text-align: center;\n        `}\n      >\n        hi this is a footer\n      </div>\n    </div>\n  );\n};\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport Tilt from \"react-tilt\";\nimport { Link } from \"react-router-dom\";\n\nimport { mediaQueries, colors, fonts, Emoji } from \"../../shared/config\";\n\nconst settings = {\n  LinkColor: colors.teal\n};\n\nconst MainPage = styled(\"div\")`\n  background-color: white;\n\n  height: 100vh;\n  width: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TextHolder = styled(\"div\")`\n  height: auto;\n  width: calc(100% - 220px);\n  ${mediaQueries.tablet} {\n    width: 100%;\n  }\n  ${mediaQueries.mobile} {\n    font-size: 14px;\n  }\n`;\n\nconst LinkStyle = styled(\"a\")`\n  color: ${settings.LinkColor};\n  text-decoration: none;\n  &:hover {\n    filter: brightness(140%);\n  }\n`;\n\nconst Giraffe = styled(\"img\")`\n  height: 200px;\n  width: 200px;\n  margin: 15px;\n  object-fit: cover;\n  border-radius: 50%;\n  border: 1px dotted gray;\n  ${mediaQueries.tablet} {\n    display: none;\n  }\n`;\n\nconst P = styled(\"p\")`\n  margin: 20px;\n  ${mediaQueries.mobile} {\n    margin: 16px;\n  }\n`;\n\nconst Header = styled(\"h1\")`\n  margin: 20px;\n  ${mediaQueries.mobile} {\n    margin: 16px;\n  }\n  font-family: ${fonts.comic.heading};\n`;\n\nexport default class LandingPage extends React.Component {\n  render() {\n    return (\n      <MainPage>\n        <div\n          className={css`\n            width: 65%;\n            height: auto;\n            ${mediaQueries.mobile} {\n              width: 80%;\n            }\n            min-width: 300px;\n            font-family: ${fonts.comic.body};\n          `}\n        >\n          <Tilt\n            className=\"Tilt\"\n            options={{\n              reverse: true,\n              scale: 1.02,\n              max: 13,\n              perspective: 1000,\n              speed: 20000,\n              reset: true\n            }}\n            style={{\n              height: \"auto\",\n              width: \"100%\"\n            }}\n          >\n            <div className=\"Tilt-inner\">\n              <div\n                className={css`\n                  display: flex;\n                  flex-direction: row;\n                  align-items: center;\n                  font-size: 20px;\n                  padding: 20px;\n                  ${mediaQueries.mobile} {\n                    padding: 10px;\n                  }\n                  border: 3px solid black;\n                  border-radius: 20px;\n                `}\n              >\n                <Giraffe src={\"https://i.imgur.com/wSasxPZ.jpg\"}></Giraffe>\n\n                <TextHolder>\n                  <Header>Hello :)</Header>\n                  <P>\n                    Welcome to my site! <Emoji label=\"wave\" symbol=\"👋\" /> I'm a\n                    second-year student at UCLA. I strive to{\" \"}\n                    <span\n                      className={css`\n                        color: #089ed1;\n                        font-weight: bold;\n                      `}\n                    >\n                      make waves\n                    </span>{\" \"}\n                    <Emoji label=\"wave\" symbol=\"🌊\" /> in interesting ways.\n                  </P>\n\n                  <P>\n                    Right now, I'm most invested in building{\" \"}\n                    <LinkStyle\n                      className={css`\n                        font-weight: bold;\n                      `}\n                      href=\"http://novaforgood.org/\"\n                      target=\"_blank\"\n                    >\n                      Nova <Emoji label=\"stars\" symbol=\"✨\" />\n                    </LinkStyle>\n                    , where we connect college students with nonprofits through\n                    pro-bono collaborations. I also lead the External Sites team\n                    at the{\" \"}\n                    <LinkStyle\n                      className={css`\n                        font-weight: bold;\n                      `}\n                      href=\"https://dailybruin.com/about/\"\n                      target=\"_blank\"\n                    >\n                      Daily Bruin <Emoji label=\"memo\" symbol=\"📝\" />\n                    </LinkStyle>\n                    , where we use multimedia to tell stories like the{\" \"}\n                    <LinkStyle\n                      href=\"http://dailytrojan.dailybruin.com/\"\n                      target=\"_blank\"\n                    >\n                      this\n                    </LinkStyle>\n                    ,{\" \"}\n                    <LinkStyle\n                      href=\"https://features.dailybruin.com/2019/beyondthereports/\"\n                      target=\"_blank\"\n                    >\n                      this\n                    </LinkStyle>\n                    , and{\" \"}\n                    <LinkStyle\n                      href=\"https://features.dailybruin.com/2019/wasted-opportunity/\"\n                      target=\"_blank\"\n                    >\n                      this\n                    </LinkStyle>\n                    .\n                  </P>\n\n                  <P>\n                    Check out my{\" \"}\n                    <LinkStyle\n                      href=\"https://maxcwu.home.blog/\"\n                      target=\"_blank\"\n                      className={css`\n                        font-weight: bold;\n                      `}\n                    >\n                      blog <Emoji label=\"pencil\" symbol=\"✏️\" />\n                    </LinkStyle>{\" \"}\n                    and my{\" \"}\n                    <LinkStyle\n                      href=\"https://github.com/legitmaxwu\"\n                      target=\"_blank\"\n                      className={css`\n                        font-weight: bold;\n                      `}\n                    >\n                      GitHub <Emoji label=\"computer\" symbol=\"🖥️\" />\n                    </LinkStyle>\n                    . Also, here's my{\" \"}\n                    <LinkStyle\n                      href=\"https://www.linkedin.com/in/maxcwu/\"\n                      target=\"_blank\"\n                      className={css`\n                        font-weight: bold;\n                      `}\n                    >\n                      LinkedIn <Emoji label=\"handshake\" symbol=\"🤝\" />\n                    </LinkStyle>\n                    . I put some of my interests there, so connect with me and\n                    let's talk!\n                  </P>\n\n                  <P>- Max</P>\n\n                  <P>\n                    PS: my real website is{\" \"}\n                    <Link\n                      to=\"/story\"\n                      className={css`\n                        color: ${settings.LinkColor};\n                        text-decoration: none;\n                        &:hover {\n                          filter: brightness(140%);\n                        }\n                      `}\n                    >\n                      here\n                    </Link>{\" \"}\n                    :P (I'd love for you to check it out!)\n                  </P>\n                </TextHolder>\n              </div>\n            </div>\n          </Tilt>\n        </div>\n      </MainPage>\n    );\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { StoryPage } from \"./pages/Story\";\nimport LandingPage from \"./pages/Landing\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/story\" component={StoryPage} />\n            <Route exact path=\"/\" component={LandingPage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
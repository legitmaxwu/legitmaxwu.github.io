{"version":3,"sources":["shared/config.tsx","components/StoryParallax/index.js","components/Navbar/index.tsx","components/CardLayout/index.tsx","components/Cards/Card.tsx","components/Cards/ArtCard.tsx","pages/Story/ArtPage/index.tsx","pages/Story/ProjectsPage/index.tsx","components/Cards/PhotoCard.tsx","pages/Story/PhotographyPage/index.tsx","pages/Story/FriendsPage/index.tsx","pages/Story/index.tsx","pages/Landing/index.tsx","pages/Friends/EmirFoodPage.tsx","pages/Friends/PatrickBooksPage.tsx","pages/Friends/CindySmoothiesPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["mediaQueries","colors","fonts","heading","body","StoryParallax","props","state","window","addEventListener","e","layers","Array","from","document","querySelectorAll","topDistance","pageYOffset","forEach","layer","speed","getAttribute","movement","style","transform","className","ref","c","container","id","data-speed","css","React","Component","scroller","scrollTo","smooth","NavItem","itemStyle","itemHoverStyle","to","children","ChooseScroll","scroll","activeClass","spy","duration","ignoreCancelEvents","Blank","styled","Navbar","url","useRouteMatch","DesktopView","MobileView","CardLayout","sheetsData","sheetId","this","Tabletop","init","key","callback","googleData","setState","simpleSheet","itemMargin","containerWidth","itemClassName","gridWidth","transitionDuration","columns","breakpointCols","columnClassName","map","row","createElement","cardComponent","value","Card","Image","ImageHolder","ArtCard","showModal","setModalVisibility","bind","caption","imageURL","imageAlt","src","alt","ArtPage","PhotoCard","ProjectsPage","PhotographyPage","StyledLink","Link","FriendsPage","StoryPage","path","position","backgroundColor","color","fontWeight","name","textShadow","transition","exact","settings","Spacer","div","MainPage","LinkStyle","P","ListItem","Img","BodyText","SemiBold","NewHeader","OnlinePresenceLinks","Fragment","target","href","LandingPage","FoodText","PlaceText","RatingBar","RatingNumber","Notes","RatingContainer","FoodRatings","showImages","sort","reverse","mult","first","second","f","parseFloat","s","length","onClick","toggleImages","i","ratingPercent","Rating","Food","Place","Description","EmirFoodPage","BookText","AuthorText","GenreText","LengthText","BookRatings","showNotes","genres","selectedGenre","uniqueGenres","item","Genre","split","flat","trim","filter","v","a","indexOf","includes","onChange","g","Title","Author","Length","Year","Thoughts","PatrickBooksPage","Smoothies","selectedIngredient","ingredients","console","log","uniqueIngredients","Recipe","entry","slice","splice","Comments","Pic","CindySmoothiesPage","App","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3da4f122.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./fonts.css\";\n\nexport const Emoji = (props: any) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n);\n\nexport const mediaQueries = {\n  tablet: \"@media (max-width: 1000px)\",\n  mobile: \"@media (max-width: 800px)\",\n  notMobile: \"@media (min-width: 801px)\",\n};\nexport const colors = {\n  teal: \"#008080\",\n  black: \"black\",\n  white: \"white\",\n};\n\nexport const fonts = {\n  comic: {\n    heading: \"Quicksand\",\n    body: \"Nunito\",\n  },\n  booky: {\n    heading: \"Alegreya\",\n    body: \"Alegreya\",\n  },\n  landing: {\n    heading: \"Source Sans Pro\",\n    body: \"Source Sans Pro\",\n  },\n};\n","import React from \"react\";\nimport \"./Parallax.scss\";\nimport { css } from \"emotion\";\nimport { fonts, mediaQueries, colors } from \"../../shared/config\";\n\nexport default class StoryParallax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", function(e) {\n      const layers = Array.from(document.querySelectorAll(\".parallax-layer\"));\n      let topDistance = window.pageYOffset;\n\n      layers.forEach(layer => {\n        let speed = layer.getAttribute(\"data-speed\");\n        let movement = -((topDistance * speed) / 100);\n        layer.style.transform = `translateY(${movement}px)`;\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Parallax\" ref={c => (this.container = c)}>\n        <div className=\"parallax-layer\" id=\"layer-0\" data-speed=\"40\">\n          <div\n            className={css`\n              font-family: ${fonts.booky.heading};\n              font-size: 72px;\n              text-align: center;\n              margin: 80px;\n              ${mediaQueries.mobile} {\n                font-size: 60px;\n                margin: 80px 40px;\n              }\n            `}\n          >\n            The Story of Max Wu\n          </div>\n        </div>\n        {/* <div className=\"parallax-layer\" id=\"layer-2\" data-speed=\"85\"></div> */}\n        <div className=\"parallax-layer\" id=\"layer-1\" data-speed=\"100\"></div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\n\nimport { colors, fonts } from \"../../shared/config\";\n\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { Link as ScrollLink, scroller } from \"react-scroll\";\n\nscroller.scrollTo(\"bottomNavbar\", {\n  smooth: \"easeInQuart\"\n});\n\ninterface NavItemProps {\n  itemStyle?: any;\n  itemHoverStyle?: any;\n  to: string;\n}\n\nconst NavItem: React.FC<NavItemProps> = props => {\n  const { itemStyle, itemHoverStyle, to } = props;\n\n  return (\n    <Link\n      to={to}\n      className={css`\n        display: flex;\n        text-decoration: none;\n        align-items: center;\n        padding: 20px 25px;\n        text-decoration: none;\n        ${itemStyle && {\n          ...itemStyle\n        }}\n        &:hover {\n          ${itemHoverStyle && { ...itemHoverStyle }};\n        }\n      `}\n    >\n      {props.children}\n    </Link>\n  );\n};\n\ninterface ChooseScrollProps {\n  itemStyle?: any;\n  itemHoverStyle?: any;\n  to: string;\n  scroll?: boolean;\n}\nconst ChooseScroll: React.FC<ChooseScrollProps> = props => {\n  const { itemStyle, itemHoverStyle, to, scroll } = props;\n  return scroll ? (\n    <ScrollLink\n      activeClass=\"active\"\n      to=\"bottomNavbar\"\n      spy={true}\n      smooth={true}\n      duration={2000}\n      ignoreCancelEvents\n    >\n      <NavItem\n        itemStyle={itemStyle}\n        itemHoverStyle={itemHoverStyle}\n        to={to}\n        children={props.children}\n      />\n    </ScrollLink>\n  ) : (\n    <NavItem\n      itemStyle={itemStyle}\n      itemHoverStyle={itemHoverStyle}\n      to={to}\n      children={props.children}\n    />\n  );\n};\n\nconst Blank = styled(\"div\")`\n  width: 10px;\n`;\n\ninterface NavbarProps {\n  style?: any;\n  itemStyle?: any;\n  itemHoverStyle?: any;\n  scroll?: boolean;\n}\n\nexport const Navbar: React.FC<NavbarProps> = props => {\n  const { url } = useRouteMatch();\n  const { itemStyle, itemHoverStyle, scroll, style } = props;\n\n  return (\n    <>\n      <nav\n        className={css`\n          position: -webkit-sticky;\n          width: 100%;\n          position: sticky;\n          top: 0;\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n          font-family: ${fonts.comic.heading};\n          pointer-events: auto;\n          z-index: 100;\n          overflow: scroll;\n          ${style && { ...style }}\n        `}\n      >\n        <Blank />\n\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`/`}\n          scroll={scroll}\n        >\n          go back\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}`}\n          scroll={scroll}\n        >\n          home\n        </ChooseScroll>\n        {/* <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/projects`}\n          scroll={scroll}\n        >\n          projects\n        </ChooseScroll> */}\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/art`}\n          scroll={scroll}\n        >\n          art\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/photography`}\n          scroll={scroll}\n        >\n          photography\n        </ChooseScroll>\n        <ChooseScroll\n          itemStyle={{ ...itemStyle }}\n          itemHoverStyle={{ ...itemHoverStyle }}\n          to={`${url}/friends`}\n          scroll={scroll}\n        >\n          friends' stories\n        </ChooseScroll>\n      </nav>\n    </>\n  );\n};\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport Masonry from \"react-masonry-css\";\nimport { SpringGrid } from \"react-stonecutter\";\nimport { mediaQueries } from \"../../shared/config\";\nimport \"./styles.css\";\n\nimport Tabletop from \"tabletop\";\n\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\n\nconst DesktopView = styled(\"div\")`\n  ${mediaQueries.mobile} {\n    display: none;\n  }\n`;\n\nconst MobileView = styled(\"div\")`\n  ${mediaQueries.notMobile} {\n    display: none;\n  }\n`;\n\ninterface CardLayoutState {\n  sheetsData: any;\n}\n\ninterface CardLayoutProps {\n  columns: number;\n  sheetId: string;\n  cardComponent: React.ComponentClass<{ value: any }>;\n}\n\nexport class CardLayout extends React.Component<\n  CardLayoutProps,\n  CardLayoutState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sheetsData: []\n    };\n  }\n  componentDidMount() {\n    const { sheetId } = this.props;\n    Tabletop.init({\n      key: sheetId,\n      callback: (googleData: any) => {\n        this.setState({\n          sheetsData: googleData\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  getAutoResponsiveProps() {\n    return {\n      itemMargin: 10,\n      containerWidth: 10,\n      itemClassName: \"item\",\n      gridWidth: 100,\n      transitionDuration: \".5\"\n    };\n  }\n\n  render() {\n    const { columns } = this.props;\n    return (\n      <div>\n        <MobileView>\n          <Masonry\n            breakpointCols={1}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {this.state.sheetsData &&\n              this.state.sheetsData.map((row: any) =>\n                React.createElement(this.props.cardComponent, {\n                  value: row\n                })\n              )}\n          </Masonry>\n        </MobileView>\n        <DesktopView>\n          <Masonry\n            breakpointCols={columns}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {this.state.sheetsData &&\n              this.state.sheetsData.map((row: any) =>\n                React.createElement(this.props.cardComponent, {\n                  value: row\n                })\n              )}\n          </Masonry>\n          {/* <SpringGrid\n            component=\"ul\"\n            columns={5}\n            columnWidth={\"20%\"}\n            gutterWidth={5}\n            gutterHeight={5}\n            itemHeight={200}\n            springConfig={{ stiffness: 170, damping: 26 }}\n          >\n            {this.state.sheetsData &&\n              this.state.sheetsData.map((row: any, i: number) => (\n                <li\n                  key={i}\n                  // className={css`\n                  //   width: 100%;\n                  //   height: 100%;\n                  // `}\n                >\n                  {React.createElement(this.props.cardComponent, {\n                    value: row\n                  })}\n                </li>\n              ))}\n          </SpringGrid> */}\n        </DesktopView>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { css } from \"emotion\";\n\n// const imagesLoadedOptions = { background: \".my-bg-image-el\" };\n\nimport { colors, fonts } from \"../../shared/config\";\n\nclass Card extends React.Component {\n  render() {\n    return (\n      <div\n        className={css`\n          height: auto;\n          width: 100%;\n          box-shadow: 5px 5px 5px black;\n        `}\n      >\n        <div\n          className={css`\n            /* margin: 5px; */\n            padding: 15px;\n            background-color: ${colors.white};\n            font-style: ${fonts.booky.body};\n          `}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","// Copy paste this template to create a new component\n// that can be put into the masonry layout!\n\nimport * as React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport Card from \"./Card\";\n\nimport { colors, fonts } from \"../../shared/config\";\n\nconst Image = styled(\"img\")`\n  width: 100%;\n  height: 100%;\n  height: auto;\n`;\n\nconst ImageHolder = styled(\"div\")`\n  width: 100%;\n  height: 100%;\n  height: auto;\n  position: relative;\n`;\n\n//\n\nconst Link = styled(\"div\")`\n  color: ${colors.teal};\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\ninterface ArtCardProps {\n  value: {\n    caption: string;\n    imageURL: string;\n    imageAlt: string;\n  };\n}\n\nclass ArtCard extends React.Component<ArtCardProps, {}> {\n  constructor(props: ArtCardProps) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n    this.setModalVisibility = this.setModalVisibility.bind(this);\n  }\n\n  setModalVisibility(state: boolean) {\n    this.setState({ showModal: state });\n  }\n\n  render() {\n    const { caption, imageURL, imageAlt } = this.props.value;\n\n    return (\n      <Card>\n        <div\n          className={css`\n            height: 100%;\n            width: 100%;\n          `}\n        >\n          <ImageHolder>\n            <Image src={imageURL} alt={imageAlt} />\n          </ImageHolder>\n          <div\n            className={css`\n              font-size: 20px;\n              margin: 10px;\n              color: ${colors.black};\n              text-align: center;\n            `}\n          >\n            {caption}\n          </div>\n          {/* <div\n            className={css`\n              text-align: center;\n            `}\n          >\n            <Link onClick={() => this.setModalVisibility(true)}>Read more</Link>\n          </div> */}\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ArtCard;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nimport { CardLayout } from \"../../../components/CardLayout\";\nimport PhotoCard from \"../../../components/Cards/ArtCard\";\n\nexport const ArtPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        width: 90%;\n        margin: 0 auto;\n      `}\n    >\n      <CardLayout\n        sheetId=\"1EwIwb7Vf8hwD80Bj4fW9OlBi-TjNZ7XXRVHx_Ow7lQo\"\n        columns={3}\n        cardComponent={PhotoCard}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { css } from \"emotion\";\n\nexport const ProjectsPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        text-align: center;\n        line-height: 400px;\n      `}\n    >\n      coming soon\n    </div>\n  );\n};\n","// Copy paste this template to create a new component\n// that can be put into the masonry layout!\n\nimport * as React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport Card from \"./Card\";\n\nimport { colors, fonts } from \"../../shared/config\";\n\nconst Image = styled(\"img\")`\n  width: 100%;\n  height: auto;\n`;\n\nconst ImageHolder = styled(\"div\")`\n  width: 100%;\n  height: auto;\n  position: relative;\n`;\n\nconst Link = styled(\"div\")`\n  color: ${colors.teal};\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\ninterface PhotoCardProps {\n  value: {\n    imageURL: string;\n    imageAlt: string;\n  };\n}\n\nclass PhotoCard extends React.Component<PhotoCardProps, {}> {\n  constructor(props: PhotoCardProps) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n    this.setModalVisibility = this.setModalVisibility.bind(this);\n  }\n\n  setModalVisibility(state: boolean) {\n    this.setState({ showModal: state });\n  }\n\n  render() {\n    const { imageURL, imageAlt } = this.props.value;\n\n    return (\n      <Card>\n        <div\n          className={css`\n            height: 100%;\n            width: 100%;\n          `}\n        >\n          <ImageHolder>\n            <Image src={imageURL} alt={imageAlt} />\n          </ImageHolder>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default PhotoCard;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nimport { CardLayout } from \"../../../components/CardLayout\";\nimport PhotoCard from \"../../../components/Cards/PhotoCard\";\n\nexport const PhotographyPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        width: 90%;\n        margin: 0 auto;\n      `}\n    >\n      <CardLayout\n        sheetId=\"1Ku9E9p1u52nVzTF71DNqSOCuecB2UK8Odyi8paDw9PI\"\n        columns={4}\n        cardComponent={PhotoCard}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  text-decoration: none;\n  text-align: center;\n  color: white;\n  align-items: center;\n  padding: 20px 25px;\n  text-decoration: none;\n  &:hover {\n    /* font-weight: 700; */\n    text-shadow: 0px 0px 10px white;\n  }\n`;\nexport const FriendsPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        width: 90%;\n        margin: 0 auto;\n      `}\n    >\n      <StyledLink to={\"/emir\"} className={css``}>\n        Emir's Food Ratings\n      </StyledLink>\n      <StyledLink to={\"/patrick\"} className={css``}>\n        Patrick's Book Ratings\n      </StyledLink>\n      <StyledLink to={\"/cindy\"} className={css``}>\n        Cindy's Homemade Smoothies\n      </StyledLink>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport Parallax from \"../../components/StoryParallax\";\nimport { Navbar } from \"../../components/Navbar\";\n\nimport { ArtPage } from \"./ArtPage\";\nimport { ProjectsPage } from \"./ProjectsPage\";\nimport { PhotographyPage } from \"./PhotographyPage\";\nimport { FriendsPage } from \"./FriendsPage\";\n\nimport { css } from \"emotion\";\nimport { colors } from \"../../shared/config\";\n\nimport { Element } from \"react-scroll\";\n\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nexport const StoryPage: React.FC = () => {\n  const { path } = useRouteMatch();\n  // const bottomColor = \"#010220\";\n  const bottomColor = \"#003366\";\n  return (\n    <div>\n      <Navbar\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"transparent\",\n        }}\n        itemStyle={{ color: colors.black, fontWeight: \"bold\" }}\n        itemHoverStyle={{\n          color: colors.white,\n        }}\n        scroll\n      />\n      <Parallax />\n      <Element name=\"bottomNavbar\" />\n      <Navbar\n        style={{ backgroundColor: \"rgba(1, 2, 32, 0.7)\" }}\n        itemStyle={{ color: colors.white }}\n        itemHoverStyle={{\n          textShadow: \"-0.06ex 0 white, 0.06ex 0 white;\",\n          backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n          transition: \"0.3s\",\n        }}\n      />\n\n      <div\n        className={css`\n          height: 15vh;\n          width: 100%;\n          background-image: linear-gradient(#010220, ${bottomColor});\n          color: white;\n          margin-top: -50px;\n          border-top: 50px solid #010220;\n          /* outline: 300px solid #010220; */\n          /* z-index: -200 !important; */\n        `}\n      ></div>\n\n      <div\n        className={css`\n          min-height: 80vh;\n          width: 100%;\n          background-color: ${bottomColor};\n          z-index: 10;\n          color: white;\n        `}\n      >\n        <Switch>\n          <Route exact path={path}>\n            <div\n              className={css`\n                text-align: center;\n                width: 100%;\n              `}\n            >\n              (WIP) here i will put stuff about me because i'm a narc pls don't\n              judge ;-; also i luv parallax scrolling\n            </div>\n          </Route>\n          <Route path={`${path}/projects`}>\n            <ProjectsPage />\n          </Route>\n          <Route path={`${path}/art`}>\n            <ArtPage />\n          </Route>\n          <Route path={`${path}/photography`}>\n            <PhotographyPage />\n          </Route>\n          <Route path={`${path}/friends`}>\n            <FriendsPage />\n          </Route>\n        </Switch>\n      </div>\n\n      <div\n        className={css`\n          height: 100px;\n          width: 100%;\n          background-image: linear-gradient(${bottomColor}, #010220);\n          z-index: 10;\n          color: white;\n\n          line-height: 100px;\n          text-align: center;\n        `}\n      >\n        hi this is a footer\n      </div>\n    </div>\n  );\n};\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport Tilt from \"react-tilt\";\nimport { Link } from \"react-router-dom\";\nimport { mediaQueries, colors, fonts, Emoji } from \"../../shared/config\";\nimport { FaGithub } from \"react-icons/fa\";\nconst settings = {\n  LinkColor: \"#0078ed\",\n};\n\nconst Spacer = styled.div`\n  width: 100%;\n  height: 10px;\n`;\n\nconst MainPage = styled(\"div\")`\n  background-color: white;\n\n  height: 100vh;\n  width: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  box-sizing: border-box;\n  ${mediaQueries.mobile} {\n    padding: 0;\n    flex-direction: column;\n    height: auto;\n  }\n`;\n\nconst TextHolder = styled(\"div\")`\n  height: auto;\n  width: calc(100% - 220px);\n  ${mediaQueries.tablet} {\n    width: 100%;\n  }\n  ${mediaQueries.mobile} {\n    font-size: 14px;\n  }\n`;\n\nconst LinkStyle = styled(\"a\")`\n  color: ${settings.LinkColor};\n  font-family: ${fonts.landing.body};\n  font-weight: 400;\n  text-decoration: none;\n  &:hover {\n    /* filter: brightness(140%); */\n    text-decoration: underline;\n  }\n  /* &::before {\n    content: \"→ \";\n  } */\n`;\n\nconst Giraffe = styled(\"img\")`\n  height: 200px;\n  width: 200px;\n  margin: 15px;\n  object-fit: cover;\n  border-radius: 50%;\n  border: 1px dotted gray;\n  ${mediaQueries.tablet} {\n    display: none;\n  }\n`;\n\nconst P = styled(\"p\")`\n  font-family: ${fonts.landing.body};\n  font-weight: 400;\n  margin: 0;\n  margin-top: 15px;\n  ${mediaQueries.mobile} {\n  }\n`;\n\nconst ListItem = styled(\"li\")`\n  list-style-type: none;\n  list-style-position: inside;\n  text-indent: -0.9em;\n  padding-left: 1em;\n  font-family: ${fonts.landing.body};\n  font-weight: 400;\n  margin: 0;\n  margin-top: 3px;\n  &::before {\n    content: \"-\\xa0\\xa0\";\n  }\n`;\n\nconst Header = styled(\"h1\")`\n  margin: 20px;\n  ${mediaQueries.mobile} {\n    margin: 16px;\n  }\n  font-family: ${fonts.landing.heading};\n`;\n\nconst DesktopView = styled(\"div\")`\n  ${mediaQueries.mobile} {\n    display: none;\n  }\n`;\nconst MobileView = styled(\"div\")`\n  ${mediaQueries.notMobile} {\n    display: none;\n  }\n`;\nconst Img = styled(\"img\")`\n  object-fit: cover;\n  width: 400px;\n  filter: grayscale(45%) brightness(110%);\n  ${mediaQueries.mobile} {\n    width: 100%;\n    max-height: 70vh;\n  }\n`;\n\nconst BodyText = styled(\"div\")`\n  width: 400px;\n  box-sizing: border-box;\n  padding: 30px;\n  ${mediaQueries.mobile} {\n    width: 100%;\n  }\n`;\n\nconst SemiBold = styled(\"span\")`\n  font-weight: 600;\n`;\n\nconst NewHeader = styled(\"h1\")`\n  font-weight: 600;\n  margin: 0;\n  font-family: ${fonts.landing.heading};\n`;\n\nconst OnlinePresenceLinks = () => {\n  return (\n    <React.Fragment>\n      <LinkStyle\n        target=\"_top\"\n        href=\"mailto:chengmaxwu@gmail.com?subject=Email me about anything\"\n      >\n        Email\n      </LinkStyle>\n      {\" | \"}\n      <LinkStyle target=\"_blank\" href=\"https://www.linkedin.com/in/maxcwu/\">\n        LinkedIn\n      </LinkStyle>\n      {\" | \"}\n      <LinkStyle target=\"_blank\" href=\"https://github.com/legitmaxwu\">\n        Github\n      </LinkStyle>\n    </React.Fragment>\n  );\n};\n\nexport default class LandingPage extends React.Component {\n  render() {\n    return (\n      <MainPage>\n        <DesktopView>\n          <Img src=\"https://i.imgur.com/Vjd0fNb.png\" />\n          <div>\n            <Spacer />\n            <OnlinePresenceLinks />\n          </div>\n        </DesktopView>\n        <MobileView>\n          <Img src=\"https://i.imgur.com/Vjd0fNb.png\" />\n        </MobileView>\n        <BodyText>\n          <NewHeader>Max Wu</NewHeader>\n          <MobileView>\n            <OnlinePresenceLinks />\n          </MobileView>\n          <P>\n            Hi! I'm a junior studying CS at UCLA. I find the most fulfillment in{\" \"}\n            <b>building consumer products</b> and{\" \"}\n            <b>understanding new perspectives</b>. I strive to make waves in\n            interesting ways.\n          </P>\n          <P>\n            If you think we'd vibe, please{\" \"}\n            <LinkStyle\n              target=\"_blank\"\n              href=\"https://www.linkedin.com/in/maxcwu/\"\n            >\n              reach out\n            </LinkStyle>{\" \"}\n            for a chat!\n          </P>\n\n          <P>\n            <SemiBold>Links</SemiBold>\n          </P>\n          <ListItem>\n            <LinkStyle target=\"_blank\" href=\"https://novaforgood.org/\">\n              <b>Nova</b>\n            </LinkStyle>\n          </ListItem>\n          {/* <P>\n            <SemiBold>Past</SemiBold>\n          </P>\n          <ListItem>\n            <LinkStyle\n              target=\"_blank\"\n              href=\"https://covidstories.dailybruin.com/\"\n            >\n              COVID-19 Student Stories (Daily Bruin)\n            </LinkStyle>\n          </ListItem>\n          <ListItem>\n            <LinkStyle\n              target=\"_blank\"\n              href=\"https://developer.ibm.com/callforcode/blogs/call-for-code-2019-finalist-rove/\"\n            >\n              Natural disaster response routing\n            </LinkStyle>\n          </ListItem>\n          <ListItem>\n            <LinkStyle target=\"_blank\" href=\"https://youtu.be/mrbjgF5SDc4\">\n              Efficient ocean-wave energy turbine\n            </LinkStyle>\n          </ListItem> */}\n          {/* <P>\n            <SemiBold>Other</SemiBold>\n          </P> */}\n          <ListItem>\n            <LinkStyle\n              target=\"_blank\"\n              href=\"https://maxcwu.home.blog/2017/12/12/lily-pads/\"\n            >\n              A poem about frogs & life\n            </LinkStyle>\n          </ListItem>\n          <ListItem>\n            <Link\n              to=\"/story\"\n              className={css`\n                color: ${settings.LinkColor};\n                text-decoration: none;\n                font-weight: 400;\n                &:hover {\n                  /* filter: brightness(140%); */\n                  text-decoration: underline;\n                }\n              `}\n            >\n              Personal stuff\n            </Link>\n          </ListItem>\n          <DesktopView>\n            <Spacer />\n            <Spacer />\n            <Spacer />\n          </DesktopView>\n          <Spacer />\n        </BodyText>\n        {/* <div\n          className={css`\n            width: 65%;\n            height: auto;\n            ${mediaQueries.mobile} {\n              width: 80%;\n            }\n            min-width: 300px;\n            font-family: ${fonts.comic.body};\n          `}\n        >\n          <Tilt\n            className=\"Tilt\"\n            options={{\n              reverse: true,\n              scale: 1.02,\n              max: 13,\n              perspective: 1000,\n              speed: 20000,\n              reset: true\n            }}\n            style={{\n              height: \"auto\",\n              width: \"100%\"\n            }}\n          >\n            <div className=\"Tilt-inner\">\n              <div\n                className={css`\n                  display: flex;\n                  flex-direction: row;\n                  align-items: center;\n                  font-size: 20px;\n                  padding: 20px;\n                  ${mediaQueries.mobile} {\n                    padding: 10px;\n                  }\n                  border: 3px solid black;\n                  border-radius: 20px;\n                `}\n              >\n                <Giraffe src={\"https://i.imgur.com/wSasxPZ.jpg\"}></Giraffe>\n\n                <TextHolder>\n                  <Header>Hello :)</Header>\n                  <P>\n                    Welcome to my site! <Emoji label=\"wave\" symbol=\"👋\" /> I'm a\n                    second-year student at UCLA. I strive to{\" \"}\n                    <span\n                      className={css`\n                        color: #089ed1;\n                        font-weight: bold;\n                      `}\n                    >\n                      make waves\n                    </span>{\" \"}\n                    <Emoji label=\"wave\" symbol=\"🌊\" /> in interesting ways.\n                  </P>\n\n                  <P>\n                    Right now, I'm most invested in building{\" \"}\n                    <LinkStyle\n                      className={css`\n                        font-weight: bold;\n                      `}\n                      href=\"http://novaforgood.org/\"\n                      target=\"_blank\"\n                    >\n                      Nova <Emoji label=\"stars\" symbol=\"✨\" />\n                    </LinkStyle>\n                    , where we connect college students with nonprofits through\n                    pro-bono collaborations. I also lead the External Sites team\n                    at the{\" \"}\n                    <LinkStyle\n                      className={css`\n                        font-weight: bold;\n                      `}\n                      href=\"https://dailybruin.com/about/\"\n                      target=\"_blank\"\n                    >\n                      Daily Bruin <Emoji label=\"memo\" symbol=\"📝\" />\n                    </LinkStyle>\n                    , where we use multimedia to tell stories like the{\" \"}\n                    <LinkStyle\n                      href=\"http://dailytrojan.dailybruin.com/\"\n                      target=\"_blank\"\n                    >\n                      this\n                    </LinkStyle>\n                    ,{\" \"}\n                    <LinkStyle\n                      href=\"https://features.dailybruin.com/2019/beyondthereports/\"\n                      target=\"_blank\"\n                    >\n                      this\n                    </LinkStyle>\n                    , and{\" \"}\n                    <LinkStyle\n                      href=\"https://features.dailybruin.com/2019/wasted-opportunity/\"\n                      target=\"_blank\"\n                    >\n                      this\n                    </LinkStyle>\n                    .\n                  </P>\n\n                  <P>\n                    Check out my{\" \"}\n                    <LinkStyle\n                      href=\"https://maxcwu.home.blog/\"\n                      target=\"_blank\"\n                      className={css`\n                        font-weight: bold;\n                      `}\n                    >\n                      blog <Emoji label=\"pencil\" symbol=\"✏️\" />\n                    </LinkStyle>{\" \"}\n                    and my{\" \"}\n                    <LinkStyle\n                      href=\"https://github.com/legitmaxwu\"\n                      target=\"_blank\"\n                      className={css`\n                        font-weight: bold;\n                      `}\n                    >\n                      GitHub <Emoji label=\"computer\" symbol=\"🖥️\" />\n                    </LinkStyle>\n                    . Also, here's my{\" \"}\n                    <LinkStyle\n                      href=\"https://www.linkedin.com/in/maxcwu/\"\n                      target=\"_blank\"\n                      className={css`\n                        font-weight: bold;\n                      `}\n                    >\n                      LinkedIn <Emoji label=\"handshake\" symbol=\"🤝\" />\n                    </LinkStyle>\n                    . I put some of my interests there, so connect with me and\n                    let's talk!\n                  </P>\n\n                  <P>- Max</P>\n\n                  <P>\n                    PS: my real website is{\" \"}\n                    <Link\n                      to=\"/story\"\n                      className={css`\n                        color: ${settings.LinkColor};\n                        text-decoration: none;\n                        &:hover {\n                          filter: brightness(140%);\n                        }\n                      `}\n                    >\n                      here\n                    </Link>{\" \"}\n                    :P (I'd love for you to check it out!)\n                  </P>\n                </TextHolder>\n              </div>\n            </div>\n          </Tilt>\n        </div> */}\n      </MainPage>\n    );\n  }\n}\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport Tabletop from \"tabletop\";\n\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nconst FoodText = styled(\"div\")`\n  width: 200px;\n`;\nconst PlaceText = styled(\"div\")`\n  width: 200px;\n`;\nconst RatingBar = styled(\"div\")`\n  width: 300px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst RatingNumber = styled(\"div\")`\n  width: 100px;\n`;\nconst Notes = styled(\"div\")`\n  width: 300px;\n`;\nconst RatingContainer = styled(\"div\")`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow-x: scroll;\n`;\ninterface FoodRatingsProps {\n  sheetId: string;\n}\ninterface FoodRatingsState {\n  sheetsData: any[];\n  showImages: boolean;\n}\nclass FoodRatings extends React.Component<FoodRatingsProps, FoodRatingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sheetsData: [],\n      showImages: true\n    };\n    this.sort = this.sort.bind(this);\n  }\n\n  componentDidMount() {\n    const { sheetId } = this.props;\n    Tabletop.init({\n      key: sheetId,\n      callback: (googleData: any) => {\n        this.setState({\n          sheetsData: googleData\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  sort(key: string, reverse: boolean) {\n    let mult = reverse ? 1 : -1;\n    this.setState({\n      sheetsData: this.state.sheetsData.sort((first, second) => {\n        let f = parseFloat(first[key]);\n        let s = parseFloat(second[key]);\n        if (f > s) return mult;\n        if (f == s) return 0;\n        else return -mult;\n      })\n    });\n  }\n\n  toggleImages() {\n    this.setState({ showImages: !this.state.showImages });\n  }\n\n  render() {\n    const { sheetId } = this.props;\n    const { sheetsData } = this.state;\n    if (sheetsData.length == 0) return <></>;\n    return (\n      <>\n        <div className={css``}>\n          <div\n            className={css`\n              position: sticky;\n              top: 0;\n              background-color: lightcoral;\n              padding: 10px;\n              border-bottom: 5px solid black;\n            `}\n          >\n            <h3>Emir's Food Ratings (WIP)</h3>\n            <button onClick={() => this.sort(\"Rating\", false)}>\n              Rating (high to low)\n            </button>\n            <button onClick={() => this.sort(\"Rating\", true)}>\n              Rating (low to high)\n            </button>\n            <button onClick={() => this.toggleImages()}>\n              Toggle Showing Images\n            </button>\n          </div>\n\n          {sheetsData.map((row, i) => {\n            const ratingPercent = (parseFloat(row.Rating) / 10) * 100;\n            return (\n              <RatingContainer\n                className={css`\n                  background-color: ${i % 2 == 0 ? \"rgba(0,0,0,0.1)\" : \"white\"};\n                `}\n              >\n                <FoodText>{row.Food}</FoodText>\n                <PlaceText>{row.Place}</PlaceText>\n                <RatingBar className={css``}>\n                  <div\n                    className={css`\n                      height: 20px;\n                      background-color: hsl(${ratingPercent + 10}, 70%, 50%);\n                      width: ${ratingPercent * 0.9}%;\n                    `}\n                  ></div>\n                </RatingBar>\n                <RatingNumber>{row.Rating} / 10</RatingNumber>\n                <Notes>{row.Description}</Notes>\n                <img\n                  src={row.imageURL}\n                  className={css`\n                    transition: 0.3s;\n                    max-height: ${this.state.showImages ? \"150px\" : 0};\n                    object-fit: cover;\n                    width: 300px;\n                  `}\n                />\n              </RatingContainer>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\nexport const EmirFoodPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        height: 100%;\n        color: black;\n      `}\n    >\n      <FoodRatings\n        sheetId={\"1aoWRD5c43OAZpBvhxSLx6r00zhunzVTdBf3Wfr9DKy8\"}\n      ></FoodRatings>\n    </div>\n  );\n};\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport Tabletop from \"tabletop\";\n\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nconst BookText = styled(\"div\")`\n  width: 200px;\n  margin-right: 20px;\n`;\nconst AuthorText = styled(\"div\")`\n  width: 140px;\n  margin-right: 20px;\n`;\nconst GenreText = styled(\"div\")`\n  width: 140px;\n  margin-right: 20px;\n`;\nconst LengthText = styled(\"div\")`\n  width: 60px;\n  margin-right: 20px;\n`;\nconst RatingBar = styled(\"div\")`\n  width: 150px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst RatingNumber = styled(\"div\")`\n  width: 100px;\n`;\nconst Notes = styled(\"div\")`\n  width: 500px;\n`;\nconst RatingContainer = styled(\"div\")`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow-x: scroll;\n`;\ninterface FoodRatingsProps {\n  sheetId: string;\n}\ninterface FoodRatingsState {\n  sheetsData: any[];\n  showImages: boolean;\n  showNotes: boolean;\n  genres: string[];\n  selectedGenre: string;\n}\nclass BookRatings extends React.Component<FoodRatingsProps, FoodRatingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sheetsData: [],\n      showImages: true,\n      showNotes: true,\n      genres: [],\n      selectedGenre: \"All\"\n    };\n    this.sort = this.sort.bind(this);\n  }\n\n  componentDidMount() {\n    const { sheetId } = this.props;\n    Tabletop.init({\n      key: sheetId,\n      callback: (googleData: any) => {\n        const uniqueGenres = [\n          \"All\",\n          ...googleData\n            .map((item: any) => item.Genre.split(\",\"))\n            .flat()\n            .map((item: any) => item.trim())\n            .filter((v: any, i: any, a: any) => a.indexOf(v) === i)\n        ];\n        this.setState({\n          sheetsData: googleData,\n          genres: uniqueGenres\n        });\n      },\n      simpleSheet: true\n    });\n  }\n\n  sort(key: string, reverse: boolean) {\n    let mult = reverse ? 1 : -1;\n    this.setState({\n      sheetsData: this.state.sheetsData.sort((first, second) => {\n        let f = parseFloat(first[key]);\n        let s = parseFloat(second[key]);\n        if (f > s) return mult;\n        if (f == s) return 0;\n        else return -mult;\n      })\n    });\n  }\n\n  render() {\n    const { genres, selectedGenre } = this.state;\n    if (this.state.sheetsData.length == 0) return <></>;\n\n    // filter sheetsData\n    let sheetsData = this.state.sheetsData;\n    if (selectedGenre != \"All\") {\n      sheetsData = sheetsData.filter((row: any) =>\n        row.Genre.split(\",\")\n          .map((item: any) => item.trim())\n          .includes(selectedGenre)\n      );\n    }\n\n    return (\n      <>\n        <div className={css``}>\n          <div\n            className={css`\n              position: sticky;\n              top: 0;\n              background-color: lightcyan;\n              padding: 10px;\n              border-bottom: 5px solid black;\n            `}\n          >\n            <h3>Patrick's Book Ratings (WIP)</h3>\n            <button onClick={() => this.sort(\"Rating\", false)}>Rating ↓</button>\n            <button onClick={() => this.sort(\"Rating\", true)}>Rating ↑</button>\n            <button onClick={() => this.sort(\"Length\", false)}>Length ↓</button>\n            <button onClick={() => this.sort(\"Length\", true)}>Length ↑</button>\n            <button onClick={() => this.sort(\"Year\", false)}>Year ↓</button>\n            <button onClick={() => this.sort(\"Year\", true)}>Year ↑</button>\n            <select\n              id=\"genres\"\n              onChange={e => {\n                this.setState({ selectedGenre: e.target.value });\n              }}\n            >\n              {genres.map(g => (\n                <option>{g}</option>\n              ))}\n            </select>\n\n            <button\n              onClick={() =>\n                this.setState({ showNotes: !this.state.showNotes })\n              }\n            >\n              Toggle Showing Notes\n            </button>\n            <button\n              onClick={() =>\n                this.setState({ showImages: !this.state.showImages })\n              }\n            >\n              Toggle Showing Images\n            </button>\n          </div>\n\n          {sheetsData.map((row, i) => {\n            const ratingPercent = (parseFloat(row.Rating) / 5) * 100;\n            return (\n              <RatingContainer\n                className={css`\n                  background-color: ${i % 2 == 0\n                    ? \"rgba(0,0,0,0.3)\"\n                    : \"rgba(0, 0, 0, 0.2)\"};\n                `}\n              >\n                <BookText>{row.Title}</BookText>\n                <AuthorText>{row.Author}</AuthorText>\n                <GenreText>{row.Genre}</GenreText>\n                <LengthText>{row.Length}</LengthText>\n                <LengthText>{row.Year}</LengthText>\n                <RatingBar className={css``}>\n                  {/* <div\n                    className={css`\n                      height: 20px;\n                      background-color: hsl(${ratingPercent + 10}, 70%, 50%);\n                      width: ${ratingPercent * 0.9}%;\n                    `}\n                  ></div> */}\n                  <div\n                    className={css`\n                      display: inline-block;\n                      font-size: 12;\n                      font-family: Times; // make sure ★ appears correctly\n                      line-height: 1;\n                      letter-spacing: 3px;\n                      background: linear-gradient(\n                        90deg,\n                        #fc0 ${ratingPercent}%,\n                        #fff ${ratingPercent}%\n                      );\n                      /* background-color: red; */\n                      -webkit-background-clip: text;\n                      -webkit-text-fill-color: transparent;\n                    `}\n                  >\n                    ★★★★★\n                  </div>\n                </RatingBar>\n                <RatingNumber>{row.Rating}</RatingNumber>\n                <Notes\n                  className={css`\n                    ${!this.state.showNotes && \"display: none;\"}\n                  `}\n                >\n                  {row.Thoughts}\n                </Notes>\n                <img\n                  src={row.imageURL}\n                  className={css`\n                    transition: 0.3s;\n                    max-height: ${this.state.showImages ? \"150px\" : 0};\n                    object-fit: contain;\n                    width: 300px;\n                  `}\n                />\n              </RatingContainer>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\nexport const PatrickBooksPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        height: 100%;\n        color: black;\n      `}\n    >\n      <BookRatings\n        sheetId={\"1mVLLG9JurON2fcSdVu6Xr3Bbx_Tn5niQ3trRl67OeCQ\"}\n      ></BookRatings>\n    </div>\n  );\n};\n","/// <reference path=\"./index.d.ts\"/>\n\nimport React from \"react\";\nimport Tabletop from \"tabletop\";\n\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\n\nconst FoodText = styled(\"div\")`\n  width: 50px;\n`;\nconst PlaceText = styled(\"div\")`\n  width: 200px;\n`;\nconst RatingBar = styled(\"div\")`\n  width: 300px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\nconst RatingNumber = styled(\"div\")`\n  width: 100px;\n`;\nconst Notes = styled(\"div\")`\n  width: 300px;\n`;\nconst RatingContainer = styled(\"div\")`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow-x: scroll;\n`;\ninterface SmoothiesProps {\n  sheetId: string;\n}\ninterface SmoothiesState {\n  sheetsData: any[];\n  showImages: boolean;\n  selectedIngredient: string;\n  ingredients: string[];\n}\nclass Smoothies extends React.Component<SmoothiesProps, SmoothiesState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sheetsData: [],\n      showImages: true,\n      selectedIngredient: \"All\",\n      ingredients: [],\n    };\n    this.sort = this.sort.bind(this);\n  }\n\n  componentDidMount() {\n    const { sheetId } = this.props;\n    Tabletop.init({\n      key: sheetId,\n      callback: (googleData: any) => {\n        console.log(googleData);\n        const uniqueIngredients = [\n          \"All\",\n          ...googleData\n            .map((item: any) =>\n              item.Recipe.split(\"\\n\").map(\n                (entry: any) => entry.split(\" \").slice(-1)[0]\n              )\n            )\n            .flat()\n            .map((item: any) => item.trim())\n            .filter((v: any, i: any, a: any) => a.indexOf(v) === i)\n            .filter((v: any) => v != \"\"),\n        ];\n        this.setState({\n          sheetsData: googleData,\n          ingredients: uniqueIngredients,\n        });\n      },\n      simpleSheet: true,\n    });\n  }\n\n  sort(key: string, reverse: boolean) {\n    let mult = reverse ? 1 : -1;\n    this.setState({\n      sheetsData: this.state.sheetsData.sort((first, second) => {\n        let f = parseFloat(first[key]);\n        let s = parseFloat(second[key]);\n        if (f > s) return mult;\n        if (f == s) return 0;\n        else return -mult;\n      }),\n    });\n  }\n\n  toggleImages() {\n    this.setState({ showImages: !this.state.showImages });\n  }\n\n  render() {\n    const { sheetId } = this.props;\n    const { selectedIngredient, ingredients } = this.state;\n    if (this.state.sheetsData.length == 0) return <></>;\n\n    let sheetsData = this.state.sheetsData;\n    if (selectedIngredient != \"All\") {\n      sheetsData = sheetsData.filter((row: any) =>\n        row.Recipe.split(\"\\n\")\n          .map((entry: any) => entry.split(\" \").slice(-1)[0])\n          .flat()\n          .map((item: any) => item.trim())\n          .filter((v: any, i: any, a: any) => a.indexOf(v) === i)\n          .filter((v: any) => v != \"\")\n          .includes(selectedIngredient)\n      );\n    }\n    return (\n      <>\n        <div className={css``}>\n          <div\n            className={css`\n              position: sticky;\n              top: 0;\n              background-color: lightsteelblue;\n              padding: 10px;\n              border-bottom: 5px solid black;\n            `}\n          >\n            <h3>Cindy's Smoothies (WIP)</h3>\n            <button onClick={() => this.sort(\"Rating\", false)}>\n              Rating (high to low)\n            </button>\n            <button onClick={() => this.sort(\"Rating\", true)}>\n              Rating (low to high)\n            </button>\n            <button onClick={() => this.toggleImages()}>\n              Toggle Showing Images\n            </button>\n            <select\n              id=\"ingredients\"\n              onChange={(e) => {\n                this.setState({ selectedIngredient: e.target.value });\n              }}\n            >\n              {ingredients.map((g) => (\n                <option>{g}</option>\n              ))}\n            </select>\n          </div>\n\n          {sheetsData.map((row, i) => {\n            const ratingPercent = (parseFloat(row.Rating) / 10) * 100;\n            return (\n              <RatingContainer\n                className={css`\n                  background-color: ${i % 2 == 0 ? \"rgba(0,0,0,0.1)\" : \"white\"};\n                `}\n              >\n                <FoodText>{row[\"Day #\"]}</FoodText>\n                <RatingBar className={css``}>\n                  <div\n                    className={css`\n                      height: 20px;\n                      background-color: hsl(${ratingPercent + 10}, 70%, 50%);\n                      width: ${ratingPercent * 0.9}%;\n                    `}\n                  ></div>\n                </RatingBar>\n                <RatingNumber>{row.Rating} / 10</RatingNumber>\n                <Notes>\n                  {row.Recipe.split(\"\\n\").map((item: any) => {\n                    if (item.split(\" \").splice(-1) == selectedIngredient)\n                      return (\n                        <div>\n                          <b>{item}</b>\n                        </div>\n                      );\n                    else return <div>{item}</div>;\n                  })}\n                </Notes>\n                <Notes>\n                  {row.Comments.split(\"\\n\").map((item: any) => (\n                    <div>{item}</div>\n                  ))}\n                </Notes>\n                <img\n                  src={row.Pic}\n                  className={css`\n                    transition: 0.3s;\n                    max-height: ${this.state.showImages ? \"150px\" : 0};\n                    object-fit: cover;\n                    width: 300px;\n                  `}\n                />\n              </RatingContainer>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\nexport const CindySmoothiesPage: React.FC = () => {\n  return (\n    <div\n      className={css`\n        height: 100%;\n        color: black;\n      `}\n    >\n      <Smoothies\n        sheetId={\"1WvDHjCARh07KkYMVGtEcxZxUjVBPziiFb5oS6wvkjZc\"}\n      ></Smoothies>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { StoryPage } from \"./pages/Story\";\nimport LandingPage from \"./pages/Landing\";\nimport { EmirFoodPage } from \"./pages/Friends/EmirFoodPage\";\nimport { PatrickBooksPage } from \"./pages/Friends/PatrickBooksPage\";\nimport { CindySmoothiesPage } from \"./pages/Friends/CindySmoothiesPage\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/story\" component={StoryPage} />\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/emir\" component={EmirFoodPage} />\n            <Route path=\"/patrick\" component={PatrickBooksPage} />\n            <Route path=\"/cindy\" component={CindySmoothiesPage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}